<?xml version="1.0" encoding="UTF-8"?>
<project name="test-jenkins" default="build">

    <target name="build"
            depends="prepare, phpcs, status"
            description=""/>

    <target name="clean-dir"
            description="Cleanup build artifacts">
        <delete dir="${basedir}/build/logs" />
    </target>

    <target name="init-dir"
            description="Create directories and files">
        <mkdir dir="${basedir}/build/logs" />
        <touch file="${basedir}/build/logs/comment.md" />
        <touch file="${basedir}/build/logs/comment-summary.md" />
        <touch file="${basedir}/build/logs/comment-body.md" />
        <touch file="${basedir}/build/logs/comment-phpcs.md" />
        <touch file="${basedir}/build/logs/comment-phpcpd.md" />
    </target>

    <target name="prepare"
            depends="clean-dir, init-dir"
            description="Prepare for build">
    </target>

    <!--<target name="phploc"
            description="Measure project size using PHPLOC and print human readable output. Intended for usage on the command line.">
        <exec executable="phploc">
            <arg value="-log-csv" />
            <arg value="${basedir}/build/logs/phploc.csv" />
            <arg value="-names"/>
            <arg value="*.php,*.inc,*.install,*.module,*.test,*.theme,*.engine" />
            <arg path="${basedir}/docroot/sites/all/modules/custom" />
        </exec>
    </target>-->

    <target name="phpcs"
            depends="run-phpcs, -phpcs-failed, -phpcs-succeed"
            description="Run PHP_Codesniffer and update comments files" />

    <target name="run-phpcs"
            description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs" output="${basedir}/build/logs/comment-phpcs.md" resultproperty="test.phpcs" failonerror="false">
            <arg value="--standard=Drupal" />
            <arg value="--report=full" />
            <arg value="--extensions='php,module,inc,install,profile,theme,info'" />
            <arg path="${basedir}/docroot/sites/all/modules/custom" />
        </exec>
       <!-- <if>
            <equals arg1="${test.phpcs}" arg2="1" />
            <then>


            </then>
            <else>

            </else>
        </if>-->
    </target>

    <target name="-phpcs-failed"
            if="test.phpcs"
            description="Update comment-summary with PHP-Codesniffer result and prepare the comment-phpcs file.">
        <replace file="${basedir}/build/logs/comment-phpcs.md" value="+ ">
            <replacetoken><![CDATA[FILE: ...rkspace/docroot/sites/all/]]></replacetoken>
        </replace>
        <replace file="${basedir}/build/logs/comment-phpcs.md" value="">
            <replacetoken><![CDATA[UPGRADE TO PHP_CODESNIFFER 2.0 TO FIX ERRORS AUTOMATICALLY]]></replacetoken>
        </replace>
        <concat append="true" destfile="${basedir}/build/logs/comment-body.md">#### Codesniffer</concat>
        <concat destfile="${basedir}/build/logs/comment-body.md" append="true">
            <filelist dir="${basedir}/build/logs" files="comment-phpcs.md" />
            <filterchain>
                <linecontains negate="true">
                    <contains value="Time:" />
                    <contains value="Mb" />
                </linecontains>
                <linecontains negate="true">
                    <contains value="-------" />
                </linecontains>
                <linecontains negate="true">
                    <contains value=" ERROR(S) AFFECTING " />
                </linecontains>
            </filterchain>
        </concat>
        <concat append="true" destfile="${basedir}/build/logs/comment-summary.md">- [ ]Codesniffer</concat>
    </target>

    <target name="-phpcs-succeed"
            unless="test.phpcs"
            description="Update comment-summary with PHP-Codesniffer result and.">
        <concat append="true" destfile="${basedir}/build/logs/comment-summary.md">- [X]Codesniffer</concat>
    </target>

    <!--<target name="phpcpd"
            description="Find duplicated code.">
        <exec executable="phpcpd" output="${basedir}/build/logs/comment-phpcpd.md" resultproperty="test.phpcpd" failonerror="false">
            <arg value="-names='*.php,*.inc,*.install,*.module,*.test,*.theme,*.engine'" />
            <arg path="${basedir}/docroot/sites/all/modules/custom" />
        </exec>
    </target>-->

    <target name="prepare-comment"
            description="Prepare the comment file used on Github">

        <concat append="true" destfile="${basedir}/build/logs/comment-summary.md">-----------</concat>
        <!--<replace file="${basedir}/build/logs/comment-phpcpd.md" value="">
            <replacetoken><![CDATA[phpcpd 2.0.1 by Sebastian Bergmann.]]></replacetoken>
        </replace>-->
        <!--<concat append="true" destfile="${basedir}/build/logs/comment-phpcs.md">### Codesniffer</concat>
        <concat append="true" destfile="${basedir}/build/logs/comment-phpcpd.md">### Copy/Paste detector</concat>-->
        <concat destfile="${basedir}/build/logs/comment.md" append="true">
            <filelist dir="${basedir}/build/logs" files="comment-summary.md, comment-body.md"/>
        </concat>
    </target>

    <target name="status"
            description="Determine the build status">
        <condition property="build.failed">
            <or>
                <isfailure code="${test.phpcs}" />
                <!--<isfailure code="${test.phpcpd}" />-->
            </or>
        </condition>
        <fail if="build.failed" />
    </target>
</project>